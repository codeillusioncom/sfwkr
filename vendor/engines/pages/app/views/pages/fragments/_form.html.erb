<% if @fragment.fragment_name == 'main_navigation' %>
  <%= simple_form_for([@page, @fragment]) do |f| %>
    <div class="modal-body">
      <% json = JSON.parse(@fragment.value) %>
      <%= f.input :value, input_html: {value: json.to_json, style: 'display: none'}, label: false %>
      <%= f.input :menudata, input_html: {value: '', style: 'display: none'}, label: false %>
      <% json.keys.each do |key| %>
        <label for="input_<%= key %>"><%= key %></label>
        <input id="input_<%= key %>" type="text" onchange="inputChanged('<%= key %>')" name="fragment[<%= key %>]" value="<%= json[key] %>" class="form-control"/>
      <% end %>
      <div id="fragment-editor"></div>
      <label for="menulist">Menu Items</label>

      <% @menu = Pages::Menu.where(menu_type: 'main_navigation').try(:first) %>
      <% root_menuitems = @menu.menu_items.where(depth: 0).order(:lft).order(:rgt).order(:id) %>

      <div id="menulist" class="list-group col nested-sortable">
        <% root_menuitems.each do |root_menuitem| %>
          <div data-id="<%= root_menuitem.id %>" class="list-group-item nested-1">
              <div class="row">
                <div class="col-xs-6"><%= root_menuitem.title %></div>
                <div class="col-xs-6 text-right">
                  <%= link_to pages.edit_menu_menu_item_path(root_menuitem.menu, root_menuitem), remote: true do %>
                    <span class="fa fa-edit"></span>
                  <% end %>&nbsp;
                  <%= link_to pages.menu_menu_item_path(root_menuitem.menu, root_menuitem), data: {confirm: 'Are you sure?'}, class: 'text-danger', method: :delete do %>
                    <span class="fa fa-trash-o"></span>
                  <% end %>
                </div>
              </div>
            <div class="list-group nested-sortable">
              <% if root_menuitem.children.count > 0 %>
                <%# TODO: %>
                <div data-id="2" class="list-group-item nested-2">Item 2.1</div>
                <div data-id="3" class="list-group-item nested-2">Item 2.3</div>
              <% end %>
            </div>
          </div>
        <% end %>
      </div>
      <%= link_to 'Create new MenuItem...', pages.new_menu_menu_item_path(@menu), remote: true %>

      <script type="text/javascript" charset="utf-8">
          var el = document.getElementById("menulist");
          var options = {
              removeCloneOnHide: true, // Remove the clone element when it is not showing, rather than just hiding it
              emptyInsertThreshold: 5, // px, distance mouse must be from empty sortable to insert drag element into it


              setData: function (/** DataTransfer */dataTransfer, /** HTMLElement*/dragEl) {
                  dataTransfer.setData('Text', dragEl.textContent); // `dataTransfer` object of HTML5 DragEvent
              }
          };
          var options = {};
          var nestedSortables = [].slice.call(document.querySelectorAll('.nested-sortable'));

          // Loop through each nested sortable element
          for (var i = 0; i < nestedSortables.length; i++) {
              new Sortable(nestedSortables[i], {
                  group: 'nested',
                  animation: 250,
                  direction: 'vertical',
                  fallbackOnBody: true,
                  easing: "cubic-bezier(1, 0, 0, 1)", // Easing for animation. Defaults to null. See https://easings.net/ for examples.
                  swapThreshold: 0.65,
                  dragoverBubble: true,
                  emptyInsertThreshold: 25 // px, distance mouse must be from empty sortable to insert drag element into it
              });
          }

          function save() {
              serialize(document.getElementById('menulist'));
          }

          var nestedQuery = '.nested-sortable';
          var identifier = 'id';
          var root = document.getElementById('menulist');

          function serialize(sortable) {
              var serialized = [];
              var children = [].slice.call(sortable.children);
              for (var i in children) {
                  var nested = children[i].querySelector(nestedQuery);
                  serialized.push({
                      id: children[i].dataset[identifier],
                      children: nested ? serialize(nested) : []
                  });
              }
              return serialized
          }

          function submit() {
              console.log('sss');
              var data = serialize(document.getElementById('menulist'));
              console.log(data);
              $('#fragment_menudata').val(JSON.stringify(data));
              $('form').submit();
              return false;
          }
      </script>
      <style>
        .glyphicon-move {
          cursor: move;
          cursor: -webkit-grabbing;
        }

        .sortable-ghost {
          background-color: white !important;
          color: white;
          border-width: 2px;
          border-color: lightgreen;
          border-style: solid;
        }

        .sortable-chosen {
          background-color: lightgreen;
        }

        .sortable-drag {
        }

        .list-group {
          margin-bottom: 0px;
        }

        .modal-dialog {
          width: 90%;
          margin: auto;
        }
      </style>
    </div>

    <div class="modal-footer">
      <%= link_to 'Update Fragment', '#', class: 'btn btn-primary', onclick: 'submit();return false;' %>
      <%= link_to 'Cancel', pages.page_path(@page), class: 'btn btn-default' %>
    </div>
  <% end %>
<% else %>
  <%= simple_form_for([@page, @fragment]) do |f| %>
    <div class="modal-body">
      <% json = JSON.parse(@fragment.value) %>
      <%= f.input :value, input_html: {value: json.to_json, style: 'display: none'}, label: false %>
      <% json.keys.each do |key| %>
        <label for="input_<%= key %>"><%= key %></label>
        <input id="input_<%= key %>" type="text" onchange="inputChanged('<%= key %>')" name="fragment[<%= key %>]" value="<%= json[key] %>" class="form-control"/>
      <% end %>
      <div id="fragment-editor"></div>
      <br/>
    </div>
    <div class="modal-footer">
      <%= f.submit class: 'btn btn-primary' %>
      <%= link_to 'Cancel', pages.page_path(@page), class: 'btn btn-default' %>
    </div>
  <% end %>
<% end %>

<script type="text/javascript">
    function inputChanged(key) {
        var jsonData = JSON.parse($('#fragment_value').html());
        jsonData[key] = $('#input_' + key).val();
        $('#fragment_value').html(JSON.stringify(jsonData));
    }
</script>